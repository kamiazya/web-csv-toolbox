name: Release

on:
  # Run this workflow when a workflow_run event is triggered
  # from the "Node.js CI" workflows
  # and the workflow_run's status is "completed"
  # and the workflow_run's base branch is "main".
  workflow_run:
    workflows: [Node.js CI]
    branches: [main]
    types: [completed]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          path: dist
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    # Only run this job if the workflow_run's conclusion was "success"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write # Used to commit to "Version Packages" PR
      pull-requests: write # Used to create "Version Packages" PR
      # Other permissions are defaulted to none
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset publish
          version: npx changeset version
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      published: ${{ steps.changesets.outputs.published }}
  prerelease:
    name: Prerelease
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: release
    if: needs.release.outputs.published == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Creating .npmrc
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: "Release @next"
        run: |
          npx changeset version --snapshot next
          npx changeset publish --no-git-tag --snapshot --tag next
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
