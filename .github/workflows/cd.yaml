name: CD

on:
  # Run this workflow when a workflow_run event is triggered
  # from the "Node.js CI" workflows
  # and the workflow_run's status is "completed"
  # and the workflow_run's base branch is "main".
  workflow_run:
    workflows: [CI]
    branches: [main]
    types: [completed]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # Build the package and upload it as an artifact
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - run: |
          sudo apt-get update
          sudo apt-get install libstdc++-12-dev
      - name: Install latest
        uses: moonrepo/setup-rust@v1
        with:
          targets: wasm32-unknown-unknown
          channel: nightly
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
  # Release the package to npm
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    # Only run this job if the workflow_run's conclusion was "success"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write # Used to commit to "Version Packages" PR
      pull-requests: write # Used to create "Version Packages" PR
      # Other permissions are defaulted to none
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@v4
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset publish
          version: npx changeset version
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      published: ${{ steps.changesets.outputs.published }}

  # If the release job not published, run this job to publish a prerelease
  prerelease:
    name: Prerelease
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: release
    if: needs.release.outputs.published == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@v4
      - name: Creating .npmrc
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: "Release @next"
        run: |
          npx changeset version --snapshot next
          npx changeset publish --no-git-tag --snapshot --tag next
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # This job is used to deploy the documentation to GitHub Pages
  doc:
    runs-on: ubuntu-latest
    # if the release job was successful, run this job
    needs: release
    if: needs.release.outputs.published == 'true'
    concurrency:
      group: GitHub Pages
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - run: |
          sudo apt-get update
          sudo apt-get install libstdc++-12-dev
      - name: Install latest
        uses: moonrepo/setup-rust@v1
        with:
          targets: wasm32-unknown-unknown
          channel: nightly
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
      - name: Build documentation
        run: pnpm run doc
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
