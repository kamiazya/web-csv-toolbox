name: CI
on:
  push:
    branches:
      - main
  pull_request:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  check_format:
    name: Check format
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: ./.node-version
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Check
        run: pnpm check:format

  check_clippy_and_rustfmt:
    name: Check with clippy and rustfmt
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - run: |
          sudo apt-get update
          sudo apt-get install libstdc++-12-dev
      - name: Install latest
        uses: moonrepo/setup-rust@d8048d4fdff0633123678b093726e6d7c8ad6de5 # v1.2.0
        with:
          targets: wasm32-unknown-unknown
          channel: nightly
          components: clippy,rustfmt
          target-dirs: web-csv-toolbox-wasm/target
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Run Clippy
        run: cargo clippy --manifest-path=./web-csv-toolbox-wasm/Cargo.toml --all-targets --all-features
        env:
          RUSTFLAGS: -D warnings
      - name: Run Fmt
        run: cargo fmt --manifest-path=./web-csv-toolbox-wasm/Cargo.toml --all -- --check

  build:
    name: Build
    uses: ./.github/workflows/.build.yaml
    needs:
      - check_format
      - check_clippy_and_rustfmt
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  cehck_type:
    name: Check type
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: ./.node-version
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      - name: Copy artifacts
        run: cp -r ${{ github.workspace }}/web-csv-toolbox-wasm/pkg ${{ github.workspace }}/node_modules/web-csv-toolbox-wasm
      - name: Check
        run: pnpm check:type

  coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: ./.node-version
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      - name: Coverage
        run: pnpm test:coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmarks:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: ./.node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      - name: Run benchmarks
        uses: CodSpeedHQ/action@ab07afd34cbbb7a1306e8d14b7cc44e029eee37a # v3.0.0
        with:
          run: pnpm test:bench
          token: ${{ secrets.CODSPEED_TOKEN }}

  test_nodejs:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: ${{ matrix.node-version }}
        cache: pnpm
    - run: pnpm install --frozen-lockfile
    - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
    - run: pnpm test run

  test_deno:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
    - uses: denoland/setup-deno@041b854f97b325bd60e53e9dc2de9cb9f9ac0cba # v1.1.4
      with:
        deno-version: v1.x
    - run: |
        deno eval '
        import { parse } from "./dist/es/web-csv-toolbox.js";

        const csv = `name,age
        Alice,42
        Bob,69`;

        for await (const record of parse(csv)) {
          console.log(record);
        }'

  test_linux_browser:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          - firefox
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Use Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      - run: npm test run -- --browser.name=${{ matrix.browsers }} --browser.headless

  test_macos_browser:
    runs-on: macos-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          # TODO: Consider alternatives to frequent rate limit restrictions.
          # - firefox
          # NOTE: Headless Safari is currentry not supported
          # https://github.com/vitest-dev/vitest/blob/main/packages/browser/src/node/providers/webdriver.ts#L39-L41
          # - safari
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Use Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 20
          cache: pnpm
      # - if: matrix.browsers == 'safari'
      #   run: sudo safaridriver --enable
      - run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      - run: pnpm test run -- --browser.name=${{ matrix.browsers }} --browser.headless

  test_windows_browser:
    runs-on: windows-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          - firefox
          - edge
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Use Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      - run: pnpm test run -- --browser.name=${{ matrix.browsers }} --browser.headless
