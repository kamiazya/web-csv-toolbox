name: Dynamic Tests
on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true
        description: The token to upload coverage reports to Codecov
      CODSPEED_TOKEN:
        required: true
        description: The token to upload benchmarks to CodSpeed

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - name: Coverage
        run: pnpm test:coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - name: Run benchmarks
        uses: CodSpeedHQ/action@ab07afd34cbbb7a1306e8d14b7cc44e029eee37a # v3.0.0
        with:
          run: pnpm test:bench
          token: ${{ secrets.CODSPEED_TOKEN }}

  test_nodejs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Setup
      uses: ./.github/actions/setup
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
    - run: pnpm run test --project node --project typecheck


  # test_deno:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
  #   - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
  #   - uses: denoland/setup-deno@5fae568d37c3b73449009674875529a984555dd1 # v1.3.0
  #     with:
  #       deno-version: v1.x
  #   - run: |
  #       deno eval '
  #       import { parse } from "web-csv-toolbox";

  #       const csv = `name,age
  #       Alice,42
  #       Bob,69`;

  #       for await (const record of parse(csv)) {
  #         console.log(record);
  #       }'

  test_linux_browser:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          - firefox
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - run: pnpm run test --project browser --browser.name=${{ matrix.browsers }} --browser.headless

  test_macos_browser:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          # TODO: Consider alternatives to frequent rate limit restrictions.
          # - firefox
          # NOTE: Headless Safari is currentry not supported
          # https://github.com/vitest-dev/vitest/blob/main/packages/browser/src/node/providers/webdriver.ts#L39-L41
          # - safari
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      # - if: matrix.browsers == 'safari'
      #   run: sudo safaridriver --enable
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - run: pnpm run test --project browser --browser.name=${{ matrix.browsers }} --browser.headless

  test_windows_browser:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          - firefox
          - edge
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - run: pnpm run test --project browser --browser.name=${{ matrix.browsers }} --browser.headless
