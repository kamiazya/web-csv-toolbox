name: Dynamic Tests
on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true
        description: The token to upload coverage reports to Codecov
      CODSPEED_TOKEN:
        required: true
        description: The token to upload benchmarks to CodSpeed

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      - name: Coverage
        run: pnpm test:coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      - name: Run benchmarks
        uses: CodSpeedHQ/action@0010eb0ca6e89b80c88e8edaaa07cfe5f3e6664d # v3.5.0
        with:
          run: pnpm test:bench
          token: ${{ secrets.CODSPEED_TOKEN }}

  test_nodejs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Setup
      uses: ./.github/actions/setup
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
    - run: pnpm test run


  test_deno:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
    - uses: denoland/setup-deno@5e01c016a857a4dbb5afe9d0f9733cd472cba985 # v1.5.1
      with:
        deno-version: v1.x
    - run: |
        deno eval '
        import { parse } from "./dist/es/web-csv-toolbox.js";

        const csv = `name,age
        Alice,42
        Bob,69`;

        for await (const record of parse(csv)) {
          console.log(record);
        }'

  test_linux_browser:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          - firefox
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      - run: npm test run -- --browser.name=${{ matrix.browsers }} --browser.headless

  test_macos_browser:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          # TODO: Consider alternatives to frequent rate limit restrictions.
          # - firefox
          # NOTE: Headless Safari is currentry not supported
          # https://github.com/vitest-dev/vitest/blob/main/packages/browser/src/node/providers/webdriver.ts#L39-L41
          # - safari
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      # - if: matrix.browsers == 'safari'
      #   run: sudo safaridriver --enable
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      - run: pnpm test run -- --browser.name=${{ matrix.browsers }} --browser.headless


  test_windows_browser:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        browsers:
          - chrome
          - firefox
          - edge
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup
        uses: ./.github/actions/setup
        with:
          skip-rust-setup: 'true'
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      - run: pnpm test run -- --browser.name=${{ matrix.browsers }} --browser.headless
